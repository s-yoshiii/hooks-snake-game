{"version":3,"sources":["utils/index.js","constants/index.js","components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","hooks/useSnakeGame.js","App.js","index.js"],"names":["getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","fields","i","cols","Array","fill","push","food","initialPosition","initialValue","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","map","row","column","Button","status","onStart","onRestart","onStop","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","timer","undefined","unsubscribe","clearInterval","useSnakeGame","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","updateDirection","useCallback","newDirection","updateDifficulty","handlekeydown","e","keyCode","document","addEventListener","removeEventListener","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","start","stop","reload","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c0819c3b.chunk.js","sourcesContent":["export const getFoodPosition = (fieldSize, excludes) => {\r\n  while (true) {\r\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n    const conflict = excludes.some((item) => item.x === x && item === y);\r\n    if (!conflict) {\r\n      return { x, y };\r\n    }\r\n  }\r\n};\r\n\r\nexport const initFields = (fieldSize, snake) => {\r\n  const fields = [];\r\n  for (let i = 0; i < fieldSize; i++) {\r\n    const cols = new Array(fieldSize).fill(\"\");\r\n    fields.push(cols);\r\n  }\r\n  fields[snake.x][snake.y] = \"snake\";\r\n  const food = getFoodPosition(fieldSize, [snake]);\r\n  fields[food.x][food.y] = \"food\";\r\n  return fields;\r\n};\r\n\r\nexport const isCollision = (fieldSize, position) => {\r\n  if (position.y < 0 || position.x < 0) {\r\n    return true;\r\n  }\r\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\nexport const isEatingMyself = (fields, position) => {\r\n  return fields[position.y][position.x] === \"snake\";\r\n};\r\n","import { initFields } from \"../utils\";\r\nconst fieldSize = 35;\r\nexport const initialPosition = { x: 17, y: 17 };\r\nexport const initialValue = initFields(fieldSize, initialPosition);\r\nexport const defaultInterval = 1000;\r\nexport const defaultDifficulty = 3;\r\nexport const Difficulty = [2000, 1000, 500, 200, 100];\r\nexport const GameStatus = Object.freeze({\r\n  init: \"init\",\r\n  playing: \"playing\",\r\n  suspended: \"suspended\",\r\n  gameover: \"gameover\",\r\n});\r\nexport const Direction = Object.freeze({\r\n  up: \"up\",\r\n  right: \"right\",\r\n  left: \"left\",\r\n  down: \"down\",\r\n});\r\nexport const OppositeDirection = Object.freeze({\r\n  up: \"down\",\r\n  right: \"left\",\r\n  left: \"right\",\r\n  down: \"up\",\r\n});\r\nexport const Delta = Object.freeze({\r\n  up: { x: 0, y: -1 },\r\n  right: { x: 1, y: 0 },\r\n  left: { x: -1, y: 0 },\r\n  down: { x: 0, y: 1 },\r\n});\r\n\r\nexport const DirectionKeyCodeMap = Object.freeze({\r\n  37: Direction.left,\r\n  38: Direction.up,\r\n  39: Direction.right,\r\n  40: Direction.down,\r\n});\r\n","import React from \"react\";\r\nimport { defaultDifficulty, Difficulty } from \"../constants\";\r\nconst Navigation = ({\r\n  length,\r\n  difficulty = defaultDifficulty,\r\n  onChangeDifficulty,\r\n}) => {\r\n  const upVisibility = difficulty < Difficulty.length ? \"\" : \"is-hidden\";\r\n  const downVisibility = difficulty > 1 ? \"\" : \"is-hidden\";\r\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\r\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"navigation-item\">\r\n        <span className=\"navigation-label\">Length:</span>\r\n        <div className=\"navigation-item-number-container\">\r\n          <div className=\"num-board\">{length}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"navigation-item\">\r\n        <span className=\"navigation-label\">Difficulty:</span>\r\n        <div className=\"navigation-item-number-container\">\r\n          <div className=\"num-board\">{difficulty}</div>\r\n          <div className=\"difficulty-button-container\">\r\n            <div\r\n              className={`difficulty-button difficulty-up ${upVisibility}`}\r\n              onClick={onUpDifficulty}\r\n            ></div>\r\n            <div\r\n              className={`difficulty-button difficulty-down ${downVisibility}`}\r\n              onClick={onDownDifficulty}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React from \"react\";\r\nconst Field = ({ fields }) => {\r\n  return (\r\n    <div className=\"field\">\r\n      {fields.map((row) => {\r\n        return row.map((column) => {\r\n          return <div className={`dots ${column}`}></div>;\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Field;\r\n","import React from \"react\";\r\nimport { GameStatus } from \"../constants\";\r\nconst Button = ({ status, onStart, onRestart, onStop }) => {\r\n  return (\r\n    <div className=\"button\">\r\n      {status === GameStatus.gameover && (\r\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\r\n          gameover\r\n        </button>\r\n      )}\r\n      {status === GameStatus.init && (\r\n        <button className=\"btn btn-init\" onClick={onStart}>\r\n          start\r\n        </button>\r\n      )}\r\n      {status === GameStatus.suspended && (\r\n        <button className=\"btn btn-suspended\" onClick={onStart}>\r\n          start\r\n        </button>\r\n      )}\r\n      {status === GameStatus.playing && (\r\n        <button className=\"btn btn-playing\" onClick={onStop}>\r\n          stop\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowLeft,\r\n  faArrowUp,\r\n  faArrowDown,\r\n  faArrowRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Direction } from \"../constants\";\r\nconst ManipulationPanel = ({ onChange }) => {\r\n  const onUp = () => onChange(Direction.up);\r\n  const onRight = () => onChange(Direction.right);\r\n  const onLeft = () => onChange(Direction.left);\r\n  const onDown = () => onChange(Direction.down);\r\n  return (\r\n    <div className=\"manipulation-panel\">\r\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n      </button>\r\n      <div>\r\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\r\n          <FontAwesomeIcon icon={faArrowUp} />\r\n        </button>\r\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\r\n          <FontAwesomeIcon icon={faArrowDown} />\r\n        </button>\r\n      </div>\r\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\r\n        <FontAwesomeIcon icon={faArrowRight} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default ManipulationPanel;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  defaultInterval,\r\n  defaultDifficulty,\r\n  Delta,\r\n  Difficulty,\r\n  Direction,\r\n  DirectionKeyCodeMap,\r\n  GameStatus,\r\n  OppositeDirection,\r\n  initialPosition,\r\n  initialValue,\r\n} from \"../constants\";\r\nimport {\r\n  getFoodPosition,\r\n  initFields,\r\n  isCollision,\r\n  isEatingMyself,\r\n} from \"../utils\";\r\n\r\nlet timer = undefined;\r\nconst unsubscribe = () => {\r\n  if (!timer) {\r\n    return;\r\n  }\r\n  clearInterval(timer);\r\n};\r\nconst useSnakeGame = () => {\r\n  const [fields, setFields] = useState(initialValue);\r\n  const [body, setBody] = useState([]);\r\n  const [status, setStatus] = useState(GameStatus.init);\r\n  const [direction, setDirection] = useState(Direction.up);\r\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\r\n  const [tick, setTick] = useState(0);\r\n  useEffect(() => {\r\n    setBody([initialPosition]);\r\n    const interval = Difficulty[difficulty - 1];\r\n    timer = setInterval(() => {\r\n      setTick((tick) => tick + 1);\r\n    }, interval);\r\n    return unsubscribe;\r\n  }, [difficulty]);\r\n  useEffect(() => {\r\n    if (body.length === 0 || status !== GameStatus.playing) {\r\n      return;\r\n    }\r\n    const canContinue = handleMoving();\r\n    if (!canContinue) {\r\n      setStatus(GameStatus.gameover);\r\n    }\r\n  }, [tick]);\r\n  const start = () => {\r\n    setStatus(GameStatus.playing);\r\n  };\r\n  const stop = () => {\r\n    setStatus(GameStatus.suspended);\r\n  };\r\n  const reload = () => {\r\n    timer = setInterval(() => {\r\n      setTick((tick) => tick + 1);\r\n    }, defaultInterval);\r\n    setStatus(GameStatus.init);\r\n    setBody([initialPosition]);\r\n    setDirection(Direction.up);\r\n    setFields(initFields(35, initialPosition));\r\n  };\r\n  const updateDirection = useCallback(\r\n    (newDirection) => {\r\n      if (status !== GameStatus.playing) {\r\n        return direction;\r\n      }\r\n      if (OppositeDirection[direction] === newDirection) {\r\n        return;\r\n      }\r\n      setDirection(newDirection);\r\n    },\r\n    [direction, status]\r\n  );\r\n  const updateDifficulty = useCallback(\r\n    (difficulty) => {\r\n      if (status !== GameStatus.init) {\r\n        return;\r\n      }\r\n      if (difficulty < 1 || difficulty > difficulty.length) {\r\n        return;\r\n      }\r\n      setDifficulty(difficulty);\r\n    },\r\n    [status, difficulty]\r\n  );\r\n  useEffect(() => {\r\n    const handlekeydown = (e) => {\r\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\r\n      if (!newDirection) {\r\n        return;\r\n      }\r\n      updateDirection(newDirection);\r\n    };\r\n    document.addEventListener(\"keydown\", handlekeydown);\r\n    return () => document.removeEventListener(\"keydown\", handlekeydown);\r\n  }, [updateDirection]);\r\n  const handleMoving = () => {\r\n    const { x, y } = body[0];\r\n    const delta = Delta[direction];\r\n    const newPosition = {\r\n      x: x + delta.x,\r\n      y: y + delta.y,\r\n    };\r\n    if (\r\n      isCollision(fields.length, newPosition) ||\r\n      isEatingMyself(fields, newPosition)\r\n    ) {\r\n      return false;\r\n    }\r\n    const newBody = [...body];\r\n    if (fields[newPosition.y][newPosition.x] !== \"food\") {\r\n      const removingTrack = newBody.pop();\r\n      fields[removingTrack.y][removingTrack.x] = \"\";\r\n    } else {\r\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\r\n      fields[food.y][food.x] = \"food\";\r\n    }\r\n    fields[newPosition.y][newPosition.x] = \"snake\";\r\n    newBody.unshift(newPosition);\r\n    setBody(newBody);\r\n    setFields(fields);\r\n    return true;\r\n  };\r\n  return {\r\n    body,\r\n    difficulty,\r\n    fields,\r\n    status,\r\n    start,\r\n    stop,\r\n    reload,\r\n    updateDirection,\r\n    updateDifficulty,\r\n  };\r\n};\r\nexport default useSnakeGame;\r\n","import React from \"react\";\r\nimport \"./styles/App.scss\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport Field from \"./components/Field\";\r\nimport Button from \"./components/Button\";\r\nimport ManipulationPanel from \"./components/ManipulationPanel\";\r\nimport useSnakeGame from \"./hooks/useSnakeGame\";\r\nfunction App() {\r\n  const {\r\n    body,\r\n    difficulty,\r\n    fields,\r\n    start,\r\n    stop,\r\n    reload,\r\n    status,\r\n    updateDirection,\r\n    updateDifficulty,\r\n  } = useSnakeGame();\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header\">\r\n        <div className=\"title-container\">\r\n          <h1 className=\"title\">Snake Game</h1>\r\n        </div>\r\n        <Navigation\r\n          length={body.length}\r\n          difficulty={difficulty}\r\n          onChangeDifficulty={updateDifficulty}\r\n        />\r\n      </header>\r\n      <main className=\"main\">\r\n        <Field fields={fields} />\r\n      </main>\r\n      <footer className=\"footer\">\r\n        <Button\r\n          status={status}\r\n          onRestart={reload}\r\n          onStart={start}\r\n          onStop={stop}\r\n        />\r\n        <ManipulationPanel onChange={updateDirection} />\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
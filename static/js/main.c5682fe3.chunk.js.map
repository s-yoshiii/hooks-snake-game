{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onRestart","onStop","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValue","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handlekeydown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c5682fe3.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\r\n  const upVisibility = difficulty < 5 ? \"\" : \"is-hidden\";\r\n  const downVisibility = difficulty > 1 ? \"\" : \"is-hidden\";\r\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1);\r\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1);\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"navigation-item\">\r\n        <span className=\"navigation-label\">Length:</span>\r\n        <div className=\"navigation-item-number-container\">\r\n          <div className=\"num-board\">{length}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"navigation-item\">\r\n        <span className=\"navigation-label\">Difficulty:</span>\r\n        <div className=\"navigation-item-number-container\">\r\n          <div className=\"num-board\">{difficulty}</div>\r\n          <div className=\"difficulty-button-container\">\r\n            <div\r\n              className={`difficulty-button difficulty-up ${upVisibility}`}\r\n              onClick={onUpDifficulty}\r\n            ></div>\r\n            <div\r\n              className={`difficulty-button difficulty-down ${downVisibility}`}\r\n              onClick={onDownDifficulty}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React from \"react\";\r\nconst Field = ({ fields }) => {\r\n  return (\r\n    <div className=\"field\">\r\n      {fields.map((row) => {\r\n        return row.map((column) => {\r\n          return <div className={`dots ${column}`}></div>;\r\n        });\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Field;\r\n","import React from \"react\";\r\nconst Button = ({ status, onStart, onRestart, onStop }) => {\r\n  return (\r\n    <div className=\"button\">\r\n      {status === \"gameover\" && (\r\n        <button className=\"btn btn-gameover\" onClick={onRestart}>\r\n          gameover\r\n        </button>\r\n      )}\r\n      {status === \"init\" && (\r\n        <button className=\"btn btn-init\" onClick={onStart}>\r\n          start\r\n        </button>\r\n      )}\r\n      {status === \"suspended\" && (\r\n        <button className=\"btn btn-suspended\" onClick={onStart}>\r\n          start\r\n        </button>\r\n      )}\r\n      {status === \"playing\" && (\r\n        <button className=\"btn btn-playing\" onClick={onStop}>\r\n          stop\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowLeft,\r\n  faArrowUp,\r\n  faArrowDown,\r\n  faArrowRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nconst ManipulationPanel = ({ onChange }) => {\r\n  const onUp = () => onChange(\"up\");\r\n  const onRight = () => onChange(\"right\");\r\n  const onLeft = () => onChange(\"left\");\r\n  const onDown = () => onChange(\"down\");\r\n  return (\r\n    <div className=\"manipulation-panel\">\r\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n      </button>\r\n      <div>\r\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\r\n          <FontAwesomeIcon icon={faArrowUp} />\r\n        </button>\r\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\r\n          <FontAwesomeIcon icon={faArrowDown} />\r\n        </button>\r\n      </div>\r\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\r\n        <FontAwesomeIcon icon={faArrowRight} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default ManipulationPanel;\r\n","export const getFoodPosition = (fieldSize, excludes) => {\r\n  while (true) {\r\n    const x = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\r\n    const conflict = excludes.some((item) => item.x === x && item === y);\r\n    if (!conflict) {\r\n      return { x, y };\r\n    }\r\n  }\r\n};\r\n\r\nexport const initFields = (fieldSize, snake) => {\r\n  const fields = [];\r\n  for (let i = 0; i < fieldSize; i++) {\r\n    const cols = new Array(fieldSize).fill(\"\");\r\n    fields.push(cols);\r\n  }\r\n  fields[snake.x][snake.y] = \"snake\";\r\n  const food = getFoodPosition(fieldSize, [snake]);\r\n  fields[food.x][food.y] = \"food\";\r\n  return fields;\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./styles/App.scss\";\nimport Navigation from \"./components/Navigation\";\nimport Field from \"./components/Field\";\nimport Button from \"./components/Button\";\nimport ManipulationPanel from \"./components/ManipulationPanel\";\nimport { getFoodPosition, initFields } from \"./utils\";\nconst initialPosition = { x: 17, y: 17 };\nconst initialValue = initFields(35, initialPosition);\nconst defaultInterval = 1000;\nconst defaultDifficulty = 3;\nconst Difficulty = [2000, 1000, 500, 200, 100];\nconst GameStatus = Object.freeze({\n  init: \"init\",\n  playing: \"playing\",\n  suspended: \"suspended\",\n  gameover: \"gameover\",\n});\nconst Direction = Object.freeze({\n  up: \"up\",\n  right: \"right\",\n  left: \"left\",\n  down: \"down\",\n});\nconst OppositeDirection = Object.freeze({\n  up: \"down\",\n  right: \"left\",\n  left: \"right\",\n  down: \"up\",\n});\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n});\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n});\n\nlet timer = undefined;\nconst unsubscribe = () => {\n  if (!timer) {\n    return;\n  }\n  clearInterval(timer);\n};\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n  return false;\n};\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === \"snake\";\n};\nfunction App() {\n  const [fields, setFields] = useState(initialValue);\n  const [body, setBody] = useState([]);\n  const [status, setStatus] = useState(GameStatus.init);\n  const [direction, setDirection] = useState(Direction.up);\n  const [difficulty, setDifficulty] = useState(defaultDifficulty);\n  const [tick, setTick] = useState(0);\n  useEffect(() => {\n    setBody([initialPosition]);\n    // setBody(\n    //   new Array(15).fill(\"\").map((_item, index) => ({ x: 17, y: 17 + index }))\n    // );\n    const interval = Difficulty[difficulty - 1];\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, interval);\n    return unsubscribe;\n  }, [difficulty]);\n  useEffect(() => {\n    if (body.length === 0 || status !== GameStatus.playing) {\n      return;\n    }\n    const canContinue = handleMoving();\n    if (!canContinue) {\n      setStatus(GameStatus.gameover);\n    }\n  }, [tick]);\n  const onStart = () => {\n    setStatus(GameStatus.playing);\n  };\n  const onStop = () => {\n    setStatus(GameStatus.suspended);\n  };\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick((tick) => tick + 1);\n    }, defaultInterval);\n    setStatus(GameStatus.init);\n    setBody([initialPosition]);\n    setDirection(Direction.up);\n    setFields(initFields(35, initialPosition));\n  };\n  const onChangeDirection = useCallback(\n    (newDirection) => {\n      if (status !== GameStatus.playing) {\n        return direction;\n      }\n      if (OppositeDirection[direction] === newDirection) {\n        return;\n      }\n      setDirection(newDirection);\n    },\n    [direction, status]\n  );\n  const onChangeDifficulty = useCallback(\n    (difficulty) => {\n      if (status !== GameStatus.init) {\n        return;\n      }\n      if (difficulty < 1 || difficulty > difficulty.length) {\n        return;\n      }\n      setDifficulty(difficulty);\n    },\n    [status, difficulty]\n  );\n  useEffect(() => {\n    const handlekeydown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode];\n      if (!newDirection) {\n        return;\n      }\n      onChangeDirection(newDirection);\n    };\n    document.addEventListener(\"keydown\", handlekeydown);\n    return () => document.removeEventListener(\"keydown\", handlekeydown);\n  }, [onChangeDirection]);\n  const handleMoving = () => {\n    const { x, y } = body[0];\n    const delta = Delta[direction];\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y,\n    };\n    if (\n      isCollision(fields.length, newPosition) ||\n      isEatingMyself(fields, newPosition)\n    ) {\n      return false;\n    }\n    const newBody = [...body];\n    if (fields[newPosition.y][newPosition.x] !== \"food\") {\n      const removingTrack = newBody.pop();\n      fields[removingTrack.y][removingTrack.x] = \"\";\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition]);\n      fields[food.y][food.x] = \"food\";\n    }\n    fields[newPosition.y][newPosition.x] = \"snake\";\n    newBody.unshift(newPosition);\n    setBody(newBody);\n    setFields(fields);\n    return true;\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onRestart={onRestart}\n          onStart={onStart}\n          onStop={onStop}\n        />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}